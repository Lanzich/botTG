# -*- coding: utf-8 -*-
import threading
import cid
lock = threading.Lock()
import configure
import telebot
import sqlite3
from io import BytesIO
import requests
user_languages = {}



# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
client = telebot.TeleBot(configure.config['TOKEN'])
db = sqlite3.connect('baza.db', check_same_thread=False)
sql = db.cursor()

sql.execute("""CREATE TABLE IF NOT EXISTS users (
    id BIGINT PRIMARY KEY, 
    nick TEXT, 
    cash INT DEFAULT 0, 
    access INT DEFAULT 0, 
    bought INT DEFAULT 0)""")

sql.execute("""CREATE TABLE IF NOT EXISTS shop (
    id INT PRIMARY KEY, 
    name TEXT, 
    price INT, 
    tovar TEXT, 
    whobuy TEXT)""")
db.commit()

# –§—É–Ω–∫—Ü–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def add_user(uid, nick):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    sql.execute(f"SELECT id FROM users WHERE id = {uid}")
    if sql.fetchone() is None:
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        sql.execute(f"INSERT INTO users (id, nick, cash, access, bought) VALUES ({uid}, '{nick}', 0, 0, 0)")
        db.commit()
        return True
    return False


@client.message_handler(commands=['start'])
def start(message):
    try:
        getname = message.from_user.first_name
        cid = message.chat.id
        uid = message.from_user.id

        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if add_user(uid, getname):
            client.send_message(cid, f"üõí | –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {getname}!\n–¢—ã –ø–æ–ø–∞–ª –≤ –±–æ—Ç–∞ –º–∞–≥–∞–∑–∏–Ω\nKavik!")
        else:
            client.send_message(cid, f"‚õîÔ∏è | –¢—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω! –ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º GIF-–∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        gif_url = "https://cdn.lifehacker.ru/wp-content/uploads/2018/10/Vpn-oblozhka-bez-zagolovka_1539676274.gif"
        client.send_animation(cid, gif_url, caption="üéâ –£–¥–∞—á–Ω–æ–≥–æ –¥–Ω—è!")

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn_ru = types.KeyboardButton("–†—É—Å—Å–∫–∏–π")
        btn_en = types.KeyboardButton("English")
        markup.add(btn_ru, btn_en)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
        client.send_message(cid, "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Choose a language:", reply_markup=markup)

    except Exception as e:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: {str(e)}')


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
@client.message_handler(func=lambda message: message.text in ['–†—É—Å—Å–∫–∏–π', 'English'])
def language_choice(message):
    cid = message.chat.id
    uid = message.from_user.id

    if message.text == "–†—É—Å—Å–∫–∏–π":
        user_languages[uid] = "ru"  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —è–∑—ã–∫ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        client.send_message(cid, "–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫! –ú–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞.")
    elif message.text == "English":
        user_languages[uid] = "en"  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —è–∑—ã–∫ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        client.send_message(cid, "You have selected English! You can now continue using the bot.")

    # –ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
    show_main_menu(cid, uid)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
def show_main_menu(cid, uid):
    # –û–ø—Ä–µ–¥–µ–ª–∏–º —è–∑—ã–∫
    language = user_languages.get(uid, "ru")  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä—É—Å—Å–∫–∏–π

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —è–∑—ã–∫–∞
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

    if language == "ru":
        btn_profile = types.KeyboardButton("–ü—Ä–æ—Ñ–∏–ª—å")
        btn_teh = types.KeyboardButton("–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞")
        btn_help = types.KeyboardButton("–ü–æ–º–æ—â—å")
        markup.add(btn_profile, btn_teh, btn_help)
        client.send_message(cid, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)
    elif language == "en":
        btn_profile = types.KeyboardButton("Profile")
        btn_teh = types.KeyboardButton("Support")
        btn_help = types.KeyboardButton("Help")
        markup.add(btn_profile, btn_teh, btn_help)
        client.send_message(cid, "Choose an action:", reply_markup=markup)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞"
@client.message_handler(func=lambda message: message.text == "–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞" or message.text == "Support")
def support_command(message):
    try:
        cid = message.chat.id
        user_id = message.from_user.id
        language = user_languages.get(user_id, 'ru')  # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–µ
        if language == 'ru':
            support_text = (
                "üí¨ | –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞:\n\n"
                "–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã –∏–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º, –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –≤–∞–º –ø–æ–º–æ—á—å.\n"
                "–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –æ–ø–∏—Å–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—É, –∏ –Ω–∞—à —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –æ—Ç–≤–µ—Ç–∏—Ç –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.\n\n"
                "–î–ª—è —Å–≤—è–∑–∏ —Å –Ω–∞–º–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–¥–Ω—É –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –æ–ø—Ü–∏–π:\n"
                "1. –ù–∞–ø–∏—à–∏—Ç–µ –∑–¥–µ—Å—å, –∏ –º—ã –æ—Ç–≤–µ—Ç–∏–º –≤–∞–º –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ.\n"
                "2. –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞ –ø–æ—á—Ç—É: support@kavikbot.ru\n"
                "3. –¢–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram: @Kavik011"
            )
        elif language == 'en':
            support_text = (
                "üí¨ | Technical Support:\n\n"
                "If you have any problems or questions, please write to us, and we will assist you as soon as possible.\n"
                "You can send a request or describe the issue, and our specialist will respond shortly.\n\n"
                "For contact, use one of the following options:\n"
                "1. Write here, and we will reply as soon as possible.\n"
                "2. Write to our email: support@kavikbot.com\n"
                "3. You can also send a private message on Telegram: @Kavik011"
            )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–¥–¥–µ—Ä–∂–∫–µ
        client.send_message(cid, support_text)

    except Exception as e:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: {str(e)}')

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ—Ñ–∏–ª—å"
@client.message_handler(func=lambda message: message.text == "–ü—Ä–æ—Ñ–∏–ª—å" or message.text == "Profile")
def myprofile(message):
    try:
        cid = message.chat.id
        uid = message.from_user.id
        sql.execute(f"SELECT * FROM users WHERE id = {uid}")
        user_info = sql.fetchone()

        if user_info:
            getaccess = user_info[3]
            if getaccess == 0:
                accessname = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å' if user_languages.get(uid, 'ru') == 'ru' else 'User'
            elif getaccess == 1:
                accessname = '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' if user_languages.get(uid, 'ru') == 'ru' else 'Administrator'
            elif getaccess == 777:
                accessname = '–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫' if user_languages.get(uid, 'ru') == 'ru' else 'Developer'

            # –í—ã–±–æ—Ä —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —è–∑—ã–∫–∞
            language = user_languages.get(uid, 'ru')  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä—É—Å—Å–∫–∏–π
            if language == "ru":
                profile_text = (
                    f"*üìá | –¢–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å:*\n\n"
                    f"*üôã‚Äç‚ôÇÔ∏è | –í–∞—à ID:* {user_info[0]}\n"
                    f"*üí∞ | –ë–∞–ª–∞–Ω—Å:* {user_info[2]} ‚ÇΩ\n"
                    f"*üõç | –ö—É–ø–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤:* {user_info[4]}\n\n"
                )
                button_text = "–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å, –∫—É–ø–∏—Ç—å —á—Ç–æ-—Ç–æ –∏–ª–∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, –≤—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É."
            elif language == "en":
                profile_text = (
                    f"*üìá | Your profile:*\n\n"
                    f"*üôã‚Äç‚ôÇÔ∏è | Your ID:* {user_info[0]}\n"
                    f"*üí∞ | Balance:* {user_info[2]} ‚ÇΩ\n"
                    f"*üõç | Products bought:* {user_info[4]}\n\n"
                )
                button_text = "If you want to top up your balance, buy something, or return to the main menu, choose the corresponding button."

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ñ–∏–ª–µ
            client.send_message(cid, profile_text, parse_mode='Markdown')

            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn_donate = types.KeyboardButton("–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å" if language == 'ru' else "Top up balance")
            btn_buy = types.KeyboardButton("–ö—É–ø–∏—Ç—å" if language == 'ru' else "Buy")
            btn_back = types.KeyboardButton("–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" if language == 'ru' else "Back to main menu")
            markup.add(btn_donate, btn_buy, btn_back)

            client.send_message(cid, button_text, reply_markup=markup)
        else:
            client.send_message(cid, "üö´ | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω." if user_languages.get(uid, 'ru') == 'ru' else "üö´ | User not found.")
    except Exception as e:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: {str(e)}')

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ö—É–ø–∏—Ç—å" –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è
@client.message_handler(func=lambda message: message.text == "–ö—É–ø–∏—Ç—å" or message.text == "Buy")
def buy_from_profile(message):
    try:
        cid = message.chat.id
        uid = message.from_user.id
        language = user_languages.get(uid, 'ru')  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –ø–æ–∫—É–ø–∫–∏
        text = ''
        if language == "ru":
            text = 'üõí | *–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤*\n\n'
        elif language == "en":
            text = 'üõí | *Product list*\n\n'

        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã
        for infoshop in sql.execute(f"SELECT * FROM shop"):
            if language == "ru":
                text += f"{infoshop[0]}. {infoshop[1]}\n–¶–µ–Ω–∞: {infoshop[2]}‚ÇΩ\n\n"
            elif language == "en":
                text += f"{infoshop[0]}. {infoshop[1]}\nPrice: {infoshop[2]}‚ÇΩ\n\n"

        # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–∞
        rmk = types.InlineKeyboardMarkup()

        # –ö–Ω–æ–ø–∫–∏ —Å —É—á–µ—Ç–æ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞
        if language == "ru":
            item_yes = types.InlineKeyboardButton(text='‚úÖ –ü–µ—Ä–µ–π—Ç–∏ –∫ –ø–æ–∫—É–ø–∫–µ', callback_data='firstbuytovaryes')
            item_no = types.InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∏—Ç—å', callback_data='firstbuytovarno')
        elif language == "en":
            item_yes = types.InlineKeyboardButton(text='‚úÖ Proceed to purchase', callback_data='firstbuytovaryes')
            item_no = types.InlineKeyboardButton(text='‚ùå Cancel', callback_data='firstbuytovarno')

        rmk.add(item_yes, item_no)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–æ–≤–∞—Ä–∞–º–∏ –∏ –∫–Ω–æ–ø–∫–∞–º–∏
        if language == "ru":
            client.send_message(cid, f'{text}*–í—ã —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –∫ –ø–æ–∫—É–ø–∫–µ —Ç–æ–≤–∞—Ä–∞?*', parse_mode='Markdown',
                                reply_markup=rmk)
        elif language == "en":
            client.send_message(cid, f'{text}*Do you want to proceed with the purchase?*', parse_mode='Markdown',
                                reply_markup=rmk)

    except Exception as e:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: {str(e)}')

@client.callback_query_handler(lambda call: call.data == 'firstbuytovaryes' or call.data == 'firstbuytovarno')
def firstbuy_callback(call):
    try:
        cid = call.message.chat.id
        uid = call.from_user.id
        language = user_languages.get(uid, 'ru')  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫

        if call.data == 'firstbuytovaryes':
            # –í–æ–ø—Ä–æ—Å –æ –≤–≤–æ–¥–µ ID —Ç–æ–≤–∞—Ä–∞, –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π
            if language == "ru":
                msg = client.send_message(cid, "*–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å:*", parse_mode='Markdown')
            elif language == "en":
                msg = client.send_message(cid, "*Enter the product ID you want to buy:*", parse_mode='Markdown')
            client.register_next_step_handler(msg, buy_next)  # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É –ø–æ–∫—É–ø–∫–∏
        elif call.data == 'firstbuytovarno':
            client.delete_message(cid, call.message.message_id)
            if language == "ru":
                client.send_message(cid, "üö´ | –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –ø–æ–∫—É–ø–∫—É —Ç–æ–≤–∞—Ä–∞.")
            elif language == "en":
                client.send_message(cid, "üö´ | You have canceled the product purchase.")

        client.answer_callback_query(callback_query_id=call.id)
    except Exception as e:
        client.send_message(call.message.chat.id, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: {str(e)}')

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ ID —Ç–æ–≤–∞—Ä–∞
def buy_next(message):
    try:
        cid = message.chat.id
        uid = message.from_user.id
        language = user_languages.get(uid, 'ru')  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫

        if message.text.isdigit():  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–≤–µ–¥–µ–Ω–æ —á–∏—Å–ª–æ (ID —Ç–æ–≤–∞—Ä–∞)
            global tovarid
            tovarid = int(message.text)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–≤–∞—Ä–∞
            product_exists = False
            for infoshop in sql.execute(f"SELECT * FROM shop WHERE id = {tovarid}"):
                product_exists = True
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                for info in sql.execute(f"SELECT * FROM users WHERE id = {uid}"):
                    if info[2] < infoshop[2]:
                        if language == "ru":
                            client.send_message(cid, '‚ö†Ô∏è | –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞!')
                        elif language == "en":
                            client.send_message(cid, '‚ö†Ô∏è | You do not have enough funds to purchase this product!')

                    else:
                        rmk = types.InlineKeyboardMarkup()
                        if language == "ru":
                            item_yes = types.InlineKeyboardButton(text='‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–æ–∫—É–ø–∫—É', callback_data='buytovaryes')
                            item_no = types.InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –ø–æ–∫—É–ø–∫—É', callback_data='buytovarno')
                        elif language == "en":
                            item_yes = types.InlineKeyboardButton(text='‚úÖ Confirm purchase', callback_data='buytovaryes')
                            item_no = types.InlineKeyboardButton(text='‚ùå Cancel purchase', callback_data='buytovarno')

                        rmk.add(item_yes, item_no)

                        if language == "ru":
                            client.send_message(cid, f"üí∏ | –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä?\n\n–í–µ—Ä–Ω—É—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞ –∑–∞ –¥–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä –ù–ï–í–û–ó–ú–û–ñ–ù–û.",
                                                reply_markup=rmk)
                        elif language == "en":
                            client.send_message(cid, f"üí∏ | Are you sure you want to buy this product?\n\nRefunds for this product are NOT possible.",
                                                reply_markup=rmk)

            if not product_exists:
                if language == "ru":
                    client.send_message(cid, "‚ùå | –¢–æ–≤–∞—Ä —Å —Ç–∞–∫–∏–º ID –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
                elif language == "en":
                    client.send_message(cid, "‚ùå | No product exists with this ID.")
        else:
            if language == "ru":
                client.send_message(cid, "‚ùå | –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π ID —Ç–æ–≤–∞—Ä–∞ (—Ü–∏—Ñ—Ä—ã).")
            elif language == "en":
                client.send_message(cid, "‚ùå | Please enter a valid product ID (numbers).")
    except Exception as e:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: {str(e)}')


@client.callback_query_handler(lambda call: call.data == 'buytovaryes' or call.data == 'buytovarno')
def buy_callback(call):
    try:
        cid = call.message.chat.id
        uid = call.from_user.id
        language = user_languages.get(uid, 'ru')  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫

        if call.data == 'buytovaryes':
            for info in sql.execute(f"SELECT * FROM users WHERE id = {uid}"):
                for infoshop in sql.execute(f"SELECT * FROM shop WHERE id = {tovarid}"):

                    if str(info[0]) not in infoshop[4]:  # –ï—Å–ª–∏ —Ç–æ–≤–∞—Ä –µ—â—ë –Ω–µ –±—ã–ª –∫—É–ø–ª–µ–Ω
                        cashtovar = int(info[2] - infoshop[2])  # –°–Ω–∏–∂–∞–µ–º –¥–µ–Ω—å–≥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                        boughttovar = int(info[4] + 1)  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—É–ø–ª–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
                        whobuytovar = str(infoshop[4]) + str(info[0]) + ','  # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ

                        # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
                        sql.execute(f"UPDATE users SET cash = {cashtovar} WHERE id = {uid}")
                        sql.execute(f"UPDATE users SET bought = {boughttovar} WHERE id = {uid}")
                        sql.execute(f"UPDATE shop SET whobuy = '{whobuytovar}' WHERE id = {tovarid}")
                        db.commit()

                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏ —Å –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–µ–π
                        client.delete_message(cid, call.message.message_id)
                        if language == "ru":
                            client.send_message(cid, f"‚úÖ | –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ —Ç–æ–≤–∞—Ä\n\n–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: {infoshop[1]}\n–¶–µ–Ω–∞: {infoshop[2]} ‚ÇΩ\n\n–¢–æ–≤–∞—Ä: {infoshop[3]}\n\n–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É!")
                        elif language == "en":
                            client.send_message(cid, f"‚úÖ | You have successfully purchased the product\n\nProduct name: {infoshop[1]}\nPrice: {infoshop[2]} ‚ÇΩ\n\nProduct: {infoshop[3]}\n\nThank you for your purchase!")

                        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è/–∑–∞–≥—Ä—É–∑–∫–∞ –≥–∏—Ñ–∫–∏ —á–µ—Ä–µ–∑ –æ–Ω–ª–∞–π–Ω URL
                        gif_url = "https://media.tenor.com/zeAhF1aguyAAAAAM/100.gif"  # URL –¥–ª—è –≥–∏—Ñ–∫–∏

                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–∏—Ñ–∫—É –æ–Ω–ª–∞–π–Ω
                        client.send_animation(cid, gif_url)

                    else:
                        client.delete_message(cid, call.message.message_id)
                        if language == "ru":
                            client.send_message(cid, "‚õîÔ∏è | –≠—Ç–æ—Ç —Ç–æ–≤–∞—Ä —É–∂–µ –±—ã–ª –∫—É–ø–ª–µ–Ω!")
                        elif language == "en":
                            client.send_message(cid, "‚õîÔ∏è | This product has already been purchased!")

        elif call.data == 'buytovarno':
            client.delete_message(cid, call.message.message_id)
            if language == "ru":
                client.send_message(cid, "‚ùå | –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –ø–æ–∫—É–ø–∫—É —Ç–æ–≤–∞—Ä–∞.")
            elif language == "en":
                client.send_message(cid, "‚ùå | You have canceled the purchase of the product.")

        client.answer_callback_query(callback_query_id=call.id)

    except Exception as e:
        client.send_message(call.message.chat.id, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: {str(e)}')


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã "–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å"
@client.message_handler(func=lambda message: message.text == "–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å" or message.text == "Top up balance")
def donate_balance(message):
    try:
        cid = message.chat.id
        uid = message.from_user.id
        language = user_languages.get(uid, 'ru')  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫

        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Å —É—á–µ—Ç–æ–º —è–∑—ã–∫–∞
        if language == "ru":
            msg = client.send_message(cid, "*üí∞ | –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è:*", parse_mode='Markdown')
            client.send_message(cid, "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", parse_mode='Markdown')
        elif language == "en":
            msg = client.send_message(cid, "*üí∞ | Enter the amount to top up:*", parse_mode='Markdown')
            client.send_message(cid, "Enter the amount to top up or go back to the main menu.", parse_mode='Markdown')

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" (–ª–æ–∫–∞–ª–∏–∑—É–µ–º –∫–Ω–æ–ø–∫—É)
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        if language == "ru":
            btn_back = types.KeyboardButton("–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        elif language == "en":
            btn_back = types.KeyboardButton("Back to main menu")
        markup.add(btn_back)



        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —à–∞–≥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è —Å—É–º–º—ã
        client.register_next_step_handler(msg, donate_value)

    except Exception as e:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: {str(e)}')


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ —Å—É–º–º—ã –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
def donate_value(message):
    try:
        cid = message.chat.id
        uid = message.from_user.id
        language = user_languages.get(uid, 'ru')  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–æ, —á—Ç–æ –≤–≤–µ–¥–µ–Ω–Ω–∞—è —Å—É–º–º–∞ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º
        if message.text.isdigit():
            global donatevalue
            donatevalue = int(message.text)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—É–º–º—É

            # –°–æ–∑–¥–∞–µ–º Inline –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Å —É—á–µ—Ç–æ–º —è–∑—ã–∫–∞
            rmk = types.InlineKeyboardMarkup()
            if language == "ru":
                item_yes = types.InlineKeyboardButton(text='‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ', callback_data='donateyes')
                item_no = types.InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data='donateno')
            elif language == "en":
                item_yes = types.InlineKeyboardButton(text='‚úÖ Confirm top-up', callback_data='donateyes')
                item_no = types.InlineKeyboardButton(text='‚ùå Cancel', callback_data='donateno')

            rmk.add(item_yes, item_no)

            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" —Å —É—á–µ—Ç–æ–º —è–∑—ã–∫–∞
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            if language == "ru":
                btn_back = types.KeyboardButton("–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
            elif language == "en":
                btn_back = types.KeyboardButton("Back to main menu")
            markup.add(btn_back)

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–æ–π –≤–æ–∑–≤—Ä–∞—Ç–∞
            if language == "ru":
                msg = client.send_message(
                    cid,
                    f"üî∞ | –ó–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ —Å—É–º–º—É {donatevalue}‚ÇΩ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞. –í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞?",
                    parse_mode='Markdown',
                    reply_markup=rmk
                )
                client.send_message(cid, "–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, –Ω–∞–∂–º–∏—Ç–µ '–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'.",
                                    reply_markup=markup)
            elif language == "en":
                msg = client.send_message(
                    cid,
                    f"üî∞ | A top-up request for {donatevalue}‚ÇΩ has been successfully created. Do you really want to top up the funds?",
                    parse_mode='Markdown',
                    reply_markup=rmk
                )
                client.send_message(cid, "If you want to go back to the main menu, press 'Back to main menu'.",
                                    reply_markup=markup)

        else:
            # –ï—Å–ª–∏ –≤–≤–µ–¥–µ–Ω–æ –Ω–µ —á–∏—Å–ª–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ —Å —É—á–µ—Ç–æ–º —è–∑—ã–∫–∞
            if language == "ru":
                client.send_message(cid, "‚ö†Ô∏è | –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É.")
            elif language == "en":
                client.send_message(cid, "‚ö†Ô∏è | Please enter a valid amount.")

            # –ü–æ–≤—Ç–æ—Ä–Ω–æ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —à–∞–≥ –¥–ª—è –≤–≤–æ–¥–∞ —Å—É–º–º—ã
            msg = client.send_message(cid, "*üí∞ | –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è:*", parse_mode='Markdown')
            client.register_next_step_handler(msg, donate_value)

    except Exception as e:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: {str(e)}')


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
@client.message_handler(func=lambda message: message.text == "–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" or message.text == "Back to main menu")
def back_to_main_menu(message):
    try:
        cid = message.chat.id
        uid = message.from_user.id
        language = user_languages.get(uid, 'ru')  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫

        # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

        # –õ–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
        if language == "ru":
            btn_profile = types.KeyboardButton("–ü—Ä–æ—Ñ–∏–ª—å")
            btn_teh = types.KeyboardButton("–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞")
            btn_help = types.KeyboardButton("–ü–æ–º–æ—â—å")
        elif language == "en":
            btn_profile = types.KeyboardButton("Profile")
            btn_teh = types.KeyboardButton("Support")
            btn_help = types.KeyboardButton("Help")

        # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        markup.add(btn_profile, btn_teh, btn_help)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        if language == "ru":
            client.send_message(cid, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)
        elif language == "en":
            client.send_message(cid, "Choose an action:", reply_markup=markup)

    except Exception as e:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: {str(e)}')


@client.callback_query_handler(lambda call: call.data == 'donateyes' or call.data == 'donateno')
def donate_result(call):
    try:
        chat_id = call.message.chat.id
        user_id = call.from_user.id
        language = user_languages.get(user_id, 'ru')  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫

        if call.data == 'donateyes':
            # –ï—Å–ª–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ
            # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            client.delete_message(chat_id, call.message.message_id)

            # –î–∞–Ω–Ω—ã–µ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—É–º–º—É –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π donatevalue)
            card_number = '2200152988902287 | –ê–ª—å—Ñ–∞ –ë–∞–Ω–∫'  # –ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã
            card_holder = '–ü–∞–≤–µ–ª –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á'  # –ò–º—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–∞—Ä—Ç—ã

            # –ü—Ä–∏–º–µ—Ä: –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–∞—è –±—ã–ª–∞ –≤–≤–µ–¥–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
            if 'donatevalue' in globals():
                donate_amount = donatevalue  # –°—É–º–º–∞, –≤–≤–µ–¥–µ–Ω–Ω–∞—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
            else:
                donate_amount = 0  # –ï—Å–ª–∏ –ø–æ –∫–∞–∫–æ–π-—Ç–æ –ø—Ä–∏—á–∏–Ω–µ donatevalue –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ, —Å—Ç–∞–≤–∏–º 0

            # –°–æ–∑–¥–∞–µ–º Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
            rmk = types.InlineKeyboardMarkup()
            button_card_number = types.InlineKeyboardButton(
                text="üìã –ö–æ–ø. –∫–∞—Ä—Ç—É" if language == 'ru' else "üìã Copy card",
                callback_data=f'copy_card_number_{card_number}')
            button_donate_amount = types.InlineKeyboardButton(
                text="üìã –ö–æ–ø. —Å—É–º–º—É" if language == 'ru' else "üìã Copy amount",
                callback_data=f'copy_donate_amount_{donate_amount}')
            button_user_id = types.InlineKeyboardButton(
                text="üìã –ö–æ–ø. –≤–∞—à ID" if language == 'ru' else "üìã Copy your ID",
                callback_data=f'copy_user_id_{user_id}')

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–µ—Ä–µ–≤–æ–¥–µ –Ω–∞ –∫–∞—Ä—Ç—É
            if language == 'ru':
                client.send_message(
                    chat_id,
                    f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\nüí≥ –ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –Ω–∞ –∫–∞—Ä—Ç—É:\n\n"
                    f"–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã: {card_number}\n"
                    f"–ò–º—è –≤–ª–∞–¥–µ–ª—å—Ü–∞: {card_holder}\n"
                    f"üí∞ –°—É–º–º–∞: {donate_amount}‚ÇΩ\n"
                    f"‚úèÔ∏è –í –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –æ–ø–ª–∞—Ç–µ —É–∫–∞–∂–∏—Ç–µ –≤–∞—à ID: {user_id}\n"
                    f"‚è≥ –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ: –æ–ø–ª–∞—Ç–∞ –Ω–∞ —Å—á–µ—Ç –ø–æ—Å—Ç—É–ø–∏—Ç —á–µ—Ä–µ–∑ 24 —á–∞—Å–∞.\n"
                    f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ",
                    reply_markup=rmk
                )
            elif language == 'en':
                client.send_message(
                    chat_id,
                    f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\nüí≥ Transfer the amount to the card:\n\n"
                    f"Card number: {card_number}\n"
                    f"Cardholder: {card_holder}\n"
                    f"üí∞ Amount: {donate_amount}‚ÇΩ\n"
                    f"‚úèÔ∏è In the payment comment, please specify your ID: {user_id}\n"
                    f"‚è≥ Please note: the payment will be credited to the account within 24 hours.\n"
                    f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ",
                    reply_markup=rmk
                )

            # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º –æ –∑–∞—è–≤–∫–µ
            for admin_id in ADMIN_IDS:
                try:
                    if language == 'ru':
                        client.send_message(admin_id,
                                            f"‚ÑπÔ∏è | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{call.from_user.username} (ID: {user_id}) —Å–æ–∑–¥–∞–ª –∑–∞—è–≤–∫—É –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–∞ —Å—É–º–º—É {donate_amount}‚ÇΩ.")
                    elif language == 'en':
                        client.send_message(admin_id,
                                            f"‚ÑπÔ∏è | User @{call.from_user.username} (ID: {user_id}) created a top-up request for {donate_amount}‚ÇΩ.")
                except Exception as e:
                    client.send_message(ADMIN_IDS[0], f"üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–∞: {str(e)}")

            # –ì–∏—Ñ–∫–∞, –∫–æ—Ç–æ—Ä—É—é –≤—ã –º–æ–∂–µ—Ç–µ –≤—Å—Ç–∞–≤–∏—Ç—å
            gif_url = "https://i.gifer.com/18Pe.gif"  # –í—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à—É —Å—Å—ã–ª–∫—É –Ω–∞ –≥–∏—Ñ–∫—É

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–∏—Ñ–∫—É
            client.send_animation(chat_id, gif_url)

        elif call.data == 'donateno':
            # –û—Ç–º–µ–Ω–∞ –∑–∞—è–≤–∫–∏ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
            client.delete_message(call.message.chat.id, call.message.message_id)
            if language == 'ru':
                client.send_message(call.message.chat.id, f"‚ùå | –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –∑–∞—è–≤–∫—É –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤")
            elif language == 'en':
                client.send_message(call.message.chat.id, f"‚ùå | You canceled the top-up request")

        # –û—Ç–≤–µ—Ç –Ω–∞ callback
        client.answer_callback_query(callback_query_id=call.id)

    except Exception as e:
        client.send_message(ADMIN_IDS[0], f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: {str(e)}')


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "How to buy a product?" (–Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º)
@client.message_handler(func=lambda message: message.text == "How to buy a product?" or message.text == "–ö–∞–∫ –∫—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä?")
def buy_help(message):
    try:
        cid = message.chat.id
        user_id = message.from_user.id
        language = user_languages.get(user_id, 'ru')  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫

        if language == 'ru':
            buy_help_text = (
                "üõí | –ß—Ç–æ–±—ã –∫—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä:\n"
                "1. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –ö—É–ø–∏—Ç—å –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤.\n"
                "2. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–æ–∫—É–ø–∫—É.\n"
                "3. –ï—Å–ª–∏ —É –≤–∞—Å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤, –ø–æ–∫—É–ø–∫–∞ –±—É–¥–µ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.\n\n"
                "–ï—Å–ª–∏ —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤, –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ."
            )
        elif language == 'en':
            buy_help_text = (
                "üõí | To buy a product:\n"
                "1. Use the 'Buy' button to view the list of products.\n"
                "2. Select a product and confirm your purchase.\n"
                "3. If you have enough funds, the purchase will be completed successfully.\n\n"
                "If you don't have enough funds, you will be notified."
            )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–∫—É–ø–∫–µ
        client.send_message(cid, buy_help_text)

    except Exception as e:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: {str(e)}')


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü–æ–º–æ—â—å"
@client.message_handler(func=lambda message: message.text == "–ü–æ–º–æ—â—å" or message.text == "/help" or message.text == "Help")
def help_command(message):
    try:
        cid = message.chat.id
        user_id = message.from_user.id
        language = user_languages.get(user_id, 'ru')  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫

        # –¢–µ–∫—Å—Ç –ø–æ–º–æ—â–∏
        if language == 'ru':
            help_text = (
                "üÜò | –ö–Ω–æ–ø–∫–∏ –±–æ—Ç–∞:\n"
                "/start - –ù–∞—á–∞—Ç—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –±–æ—Ç–æ–º\n"
                "–ö–Ω–æ–ø–∫–∞ –ø–æ–ø–æ–ª–Ω–∏—Ç—å - –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å\n"
                "–°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫ - –°–º–µ–Ω–∞ —è–∑—ã–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞\n\n"
                "–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –æ–¥–Ω—É –∏–∑ –æ–ø—Ü–∏–π –Ω–∏–∂–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."
            )
        elif language == 'en':
            help_text = (
                "üÜò | Bot buttons:\n"
                "/start - Start interacting with the bot\n"
                "Top up button - Top up balance\n"
                "Change language - Change interface language\n\n"
                "You can choose one of the options below for more detailed information."
            )

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Å –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º
        if language == 'ru':
            btn_buy_help = types.KeyboardButton("–ö–∞–∫ –∫—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä?")
            btn_donate_help = types.KeyboardButton("–ö–∞–∫ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å?")
            btn_change_lang = types.KeyboardButton("–°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫")
            btn_back = types.KeyboardButton("–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        elif language == 'en':
            btn_buy_help = types.KeyboardButton("How to buy a product?")
            btn_donate_help = types.KeyboardButton("How to top up balance?")
            btn_change_lang = types.KeyboardButton("Change language")
            btn_back = types.KeyboardButton("Back to main menu")

        markup.add(btn_buy_help, btn_donate_help, btn_change_lang, btn_back)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å –∫–Ω–æ–ø–∫–∞–º–∏
        client.send_message(cid, help_text, reply_markup=markup)

    except Exception as e:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: {str(e)}')

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫"
@client.message_handler(func=lambda message: message.text == "–°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫" or message.text == "Change language")
def change_language(message):
    try:
        cid = message.chat.id
        user_id = message.from_user.id
        language = user_languages.get(user_id, 'ru')  # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫

        # –°—Ñ–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –∫–Ω–æ–ø–æ–∫ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ —è–∑—ã–∫–∞
        if language == 'ru':
            lang_text = "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:\n1. –†—É—Å—Å–∫–∏–π\n2. –ê–Ω–≥–ª–∏–π—Å–∫–∏–π"
        elif language == 'en':
            lang_text = "Choose your interface language:\n1. Russian\n2. English"

        # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn_russian = types.KeyboardButton("–†—É—Å—Å–∫–∏–π" if language == 'en' else "Russian")
        btn_english = types.KeyboardButton("English" if language == 'ru' else "–ê–Ω–≥–ª–∏–π—Å–∫–∏–π")
        btn_back = types.KeyboardButton("–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" if language == 'ru' else "Back to main menu")

        markup.add(btn_russian, btn_english, btn_back)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–±–æ—Ä —è–∑—ã–∫–∞
        client.send_message(cid, lang_text, reply_markup=markup)

    except Exception as e:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: {str(e)}')

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
@client.message_handler(func=lambda message: message.text == "–†—É—Å—Å–∫–∏–π" or message.text == "English")
def set_language(message):
    try:
        cid = message.chat.id
        user_id = message.from_user.id

        # –°–º–µ–Ω–∞ —è–∑—ã–∫–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±–æ—Ä–∞
        if message.text == "–†—É—Å—Å–∫–∏–π":
            user_languages[user_id] = 'ru'
            client.send_message(cid, "–Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ —Ä—É—Å—Å–∫–∏–π.")
        elif message.text == "English":
            user_languages[user_id] = 'en'
            client.send_message(cid, "Interface language changed to English.")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º —è–∑—ã–∫–æ–º
        back_to_main_menu(message)

    except Exception as e:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: {str(e)}')

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
@client.message_handler(func=lambda message: message.text == "–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" or message.text == "Back to main menu")
def back_to_main_menu(message):
    try:
        cid = message.chat.id
        user_id = message.from_user.id
        language = user_languages.get(user_id, 'ru')  # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫

        # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

        if language == 'ru':
            btn_profile = types.KeyboardButton("–ü—Ä–æ—Ñ–∏–ª—å")
            btn_teh = types.KeyboardButton("–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞")
            btn_help = types.KeyboardButton("–ü–æ–º–æ—â—å")
            btn_change_lang = types.KeyboardButton("–°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫")
        elif language == 'en':
            btn_profile = types.KeyboardButton("Profile")
            btn_teh = types.KeyboardButton("Support")
            btn_help = types.KeyboardButton("Help")
            btn_change_lang = types.KeyboardButton("Change language")

        markup.add(btn_profile, btn_teh, btn_help, btn_change_lang)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        client.send_message(cid, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:" if language == 'ru' else "Choose an action:", reply_markup=markup)

    except Exception as e:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: {str(e)}')


@client.message_handler(func=lambda message: message.text == "–ö–∞–∫ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å?" or message.text == "How to top up balance?")
def donate_help(message):
    try:
        cid = message.chat.id
        user_id = message.from_user.id
        language = user_languages.get(user_id, 'ru')  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫

        # –¢–µ–∫—Å—Ç –ø–æ–º–æ—â–∏ –ø–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—é –±–∞–ª–∞–Ω—Å–∞
        if language == 'ru':
            donate_help_text = (
                "üí≥ | –î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞:\n"
                "1. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ø–æ–ø–æ–ª–Ω–∏—Ç—å.\n"
                "2. –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º."
            )
        elif language == 'en':
            donate_help_text = (
                "üí≥ | To top up your balance:\n"
                "1. Press the 'Top up' button.\n"
                "2. Choose a top-up method and follow the instructions."
            )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—é
        client.send_message(cid, donate_help_text)

    except Exception as e:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: {str(e)}')

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
@client.message_handler(func=lambda message: message.text == "–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" or message.text == "Back to main menu")
def back_to_main_menu(message):
    try:
        cid = message.chat.id
        user_id = message.from_user.id
        language = user_languages.get(user_id, 'ru')  # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

        # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Å —É—á—ë—Ç–æ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞
        if language == 'ru':
            btn_profile = types.KeyboardButton("–ü—Ä–æ—Ñ–∏–ª—å")  # –ö–Ω–æ–ø–∫–∞ "–ü—Ä–æ—Ñ–∏–ª—å"
            btn_teh = types.KeyboardButton("–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞")  # –ö–Ω–æ–ø–∫–∞ "–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞"
            btn_help = types.KeyboardButton("–ü–æ–º–æ—â—å")  # –ö–Ω–æ–ø–∫–∞ –ø–æ–º–æ—â–∏
            btn_change_lang = types.KeyboardButton("–°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫")  # –ö–Ω–æ–ø–∫–∞ —Å–º–µ–Ω—ã —è–∑—ã–∫–∞
        elif language == 'en':
            btn_profile = types.KeyboardButton("Profile")  # –ö–Ω–æ–ø–∫–∞ "Profile"
            btn_teh = types.KeyboardButton("Support")  # –ö–Ω–æ–ø–∫–∞ "Support"
            btn_help = types.KeyboardButton("Help")  # –ö–Ω–æ–ø–∫–∞ "Help"
            btn_change_lang = types.KeyboardButton("Change language")  # –ö–Ω–æ–ø–∫–∞ —Å–º–µ–Ω—ã —è–∑—ã–∫–∞

        # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        markup.add(btn_profile, btn_teh, btn_help, btn_change_lang)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        if language == 'ru':
            client.send_message(cid, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)
        else:
            client.send_message(cid, "Choose an action:", reply_markup=markup)

    except Exception as e:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: {str(e)}')



# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã "/getprofile" –∏ "/info"
@client.message_handler(commands=['getprofile', 'info'])
def getprofile(message):
    try:
        cid = message.chat.id
        uid = message.from_user.id
        sql.execute(f"SELECT * FROM users WHERE id = {uid}")
        getaccess = sql.fetchone()[3]
        accessquery = 1  # –£—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        if getaccess < accessquery:
            client.send_message(cid, '‚ö†Ô∏è | –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞!')
        else:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, —Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn_getprofile = types.KeyboardButton("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
            btn_back = types.KeyboardButton("–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
            markup.add(btn_getprofile, btn_back)

            client.send_message(cid, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)

    except Exception as e:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: {str(e)}')


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
@client.message_handler(func=lambda message: message.text == "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
def ask_for_user_id(message):
    try:
        cid = message.chat.id
        msg = client.send_message(cid, '–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n–ü—Ä–∏–º–µ—Ä: 123456')
        client.register_next_step_handler(msg, getprofile_next)
    except Exception as e:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: {str(e)}')


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
def getprofile_next(message):
    try:
        cid = message.chat.id
        getprofileid = message.text
        # –ü—Ä–æ–≤–µ—Ä–∫–∞, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º ID
        sql.execute(f"SELECT * FROM users WHERE id = {getprofileid}")
        user_info = sql.fetchone()

        if user_info:
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞
            if user_info[3] == 0:
                accessname = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
            elif user_info[3] == 1:
                accessname = '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
            elif user_info[3] == 777:
                accessname = '–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫'

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ñ–∏–ª–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            profile_text = (
                f"*üìá | –ü—Ä–æ—Ñ–∏–ª—å {user_info[1]}:*\n\n"
                f"*ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:* {user_info[0]}\n"
                f"*–ë–∞–ª–∞–Ω—Å:* {user_info[2]} ‚ÇΩ\n"
                f"*–£—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞:* {accessname}\n"
                f"*–ö—É–ø–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤:* {user_info[4]}"
            )
            client.send_message(cid, profile_text, parse_mode='Markdown')

            # –ü–æ—Å–ª–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è, –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn_back = types.KeyboardButton("–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
            markup.add(btn_back)
            client.send_message(cid, "–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, –Ω–∞–∂–º–∏—Ç–µ '–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'.", reply_markup=markup)
        else:
            client.send_message(cid, "üö´ | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    except Exception as e:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: {str(e)}')


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
@client.message_handler(func=lambda message: message.text == "–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
def back_to_main_menu(message):
    try:
        cid = message.chat.id
        # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn_profile = types.KeyboardButton("–ü—Ä–æ—Ñ–∏–ª—å")
        btn_teh = types.KeyboardButton("–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞")
        btn_help = types.KeyboardButton("–ü–æ–º–æ—â—å")
        markup.add(btn_profile,btn_teh, btn_help)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        client.send_message(cid, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)
    except Exception as e:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: {str(e)}')


@client.message_handler(commands=['editbuy'])
def editbuy(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		accessquery = 1
		with lock:
			sql.execute(f"SELECT * FROM users WHERE id = {uid}")
			getaccess = sql.fetchone()[3]
		if getaccess < 1:
			client.send_message(cid, '‚ö†Ô∏è | –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞!')
		else:
			rmk = types.InlineKeyboardMarkup()
			item_name = types.InlineKeyboardButton(text='–ù–∞–∑–≤–∞–Ω–∏–µ',callback_data='editbuyname')
			item_price = types.InlineKeyboardButton(text='–¶–µ–Ω–∞',callback_data='editbuyprice')
			item_tovar = types.InlineKeyboardButton(text='–¢–æ–≤–∞—Ä',callback_data='editbuytovar')
			rmk.add(item_name, item_price, item_tovar)
			msg = client.send_message(cid, f"üî∞ | –í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –í—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:",reply_markup=rmk,parse_mode='Markdown')
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

def editbuy_name(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		if message.text == message.text:
			global editbuynameidtovar
			editbuynameidtovar = int(message.text)
			msg = client.send_message(cid, f"*–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞:*",parse_mode='Markdown')
			client.register_next_step_handler(msg, editbuy_name_new_name)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

def editbuy_name_new_name(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		if message.text == message.text:
			global editbuynametovar
			editbuynametovar = message.text
			for infoshop in sql.execute(f"SELECT * FROM shop WHERE id = {editbuynameidtovar}"):
				rmk = types.InlineKeyboardMarkup()
				item_yes = types.InlineKeyboardButton(text='‚úÖ', callback_data='editbuynewnametovaryes')
				item_no = types.InlineKeyboardButton(text='‚ùå', callback_data='editbuynewnametovarno')
				rmk.add(item_yes, item_no)
				msg = client.send_message(cid, f"*üî∞ | –î–∞–Ω–Ω—ã–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞:*\n\nID —Ç–æ–≤–∞—Ä–∞: {editbuynameidtovar}\n–°—Ç–∞—Ä–æ–µ –∏–º—è —Ç–æ–≤–∞—Ä–∞: {infoshop[1]}\n–ù–æ–≤–æ–µ –∏–º—è —Ç–æ–≤–∞—Ä–∞: {editbuynametovar}\n\n–í—ã –ø–æ–¥–≤–µ—Ä–∂–¥–∞–µ—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è?",parse_mode='Markdown',reply_markup=rmk)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

def editbuy_price(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		if message.text == message.text:
			global editbuypriceidtovar
			editbuypriceidtovar = int(message.text)
			msg = client.send_message(cid, f"*–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞:*",parse_mode='Markdown')
			client.register_next_step_handler(msg, editbuy_price_new_price)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

def editbuy_price_new_price(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		if message.text == message.text:
			global editbuypricetovar
			editbuypricetovar = int(message.text)
			for infoshop in sql.execute(f"SELECT * FROM shop WHERE id = {editbuypriceidtovar}"):
				rmk = types.InlineKeyboardMarkup()
				item_yes = types.InlineKeyboardButton(text='‚úÖ', callback_data='editbuynewpricetovaryes')
				item_no = types.InlineKeyboardButton(text='‚ùå', callback_data='editbuynewpricetovarno')
				rmk.add(item_yes, item_no)
				msg = client.send_message(cid, f"*üî∞ | –î–∞–Ω–Ω—ã–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞:*\n\nID —Ç–æ–≤–∞—Ä–∞: {editbuypriceidtovar}\n–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: {infoshop[2]}\n–ù–æ–≤–∞—è —Ü–µ–Ω–∞: {editbuypricetovar}\n\n–í—ã –ø–æ–¥–≤–µ—Ä–∂–¥–∞–µ—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è?",parse_mode='Markdown',reply_markup=rmk)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

def editbuy_tovar(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		if message.text == message.text:
			global editbuytovaridtovar
			editbuytovaridtovar = int(message.text)
			msg = client.send_message(cid, f"*–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä:*",parse_mode='Markdown')
			client.register_next_step_handler(msg, editbuy_tovar_new_tovar)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

def editbuy_tovar_new_tovar(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		if message.text == message.text:
			global editbuytovartovar
			editbuytovartovar = message.text
			for infoshop in sql.execute(f"SELECT * FROM shop WHERE id = {editbuytovaridtovar}"):
				rmk = types.InlineKeyboardMarkup()
				item_yes = types.InlineKeyboardButton(text='‚úÖ', callback_data='editbuynewtovartovaryes')
				item_no = types.InlineKeyboardButton(text='‚ùå', callback_data='editbuynewtovartovarno')
				rmk.add(item_yes, item_no)
				msg = client.send_message(cid, f"*üî∞ | –î–∞–Ω–Ω—ã–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Åc—ã–ª–∫–∏ —Ç–æ–≤–∞—Ä–∞:*\n\nID —Ç–æ–≤–∞—Ä–∞: {editbuytovaridtovar}\n–°—Ç–∞—Ä–∞—è —Å—Å—ã–ª–∫–∞: {infoshop[3]}\n–ù–æ–≤–∞—è —Å—Å—ã–ª–∫–∞: {editbuytovartovar}\n\n–í—ã –ø–æ–¥–≤–µ—Ä–∂–¥–∞–µ—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è?",parse_mode='Markdown',reply_markup=rmk)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')




@client.callback_query_handler(lambda call: call.data == 'editbuynewtovartovaryes' or call.data == 'editbuynewtovartovarno')
def editbuy_tovar_new_callback(call):
	try:
		if call.data == 'editbuynewtovartovaryes':
			sql.execute(f"SELECT * FROM shop WHERE id = {editbuytovaridtovar}")
			sql.execute(f"UPDATE shop SET tovar = '{editbuytovartovar}' WHERE id = {editbuytovaridtovar}")
			db.commit()
			client.delete_message(call.message.chat.id, call.message.message_id-0)
			client.send_message(call.message.chat.id, f"‚úÖ | –í—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä –Ω–∞ {editbuytovartovar}")
		elif call.data == 'editbuynewtovartovarno':
			client.delete_message(call.message.chat.id, call.message.message_id-0)
			client.send_message(call.message.chat.id, f"üö´ | –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Åc—ã–ª–∫–∏ —Ç–æ–≤–∞—Ä–∞")
		client.answer_callback_query(callback_query_id=call.id)
	except:
		client.send_message(call.message.chat.id, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

@client.callback_query_handler(lambda call: call.data == 'editbuynewpricetovaryes' or call.data == 'editbuynewpricetovarno')
def editbuy_price_new_callback(call):
	try:
		if call.data == 'editbuynewpricetovaryes':
			sql.execute(f"SELECT * FROM shop WHERE id = {editbuypriceidtovar}")
			sql.execute(f"UPDATE shop SET price = {editbuypricetovar} WHERE id = {editbuypriceidtovar}")
			db.commit()
			client.delete_message(call.message.chat.id, call.message.message_id-0)
			client.send_message(call.message.chat.id, f"‚úÖ | –í—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∏ —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞ –Ω–∞ {editbuypricetovar}")
		elif call.data == 'editbuynewpricetovarno':
			client.delete_message(call.message.chat.id, call.message.message_id-0)
			client.send_message(call.message.chat.id, f"üö´ | –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞")
		client.answer_callback_query(callback_query_id=call.id)
	except:
		client.send_message(call.message.chat.id, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')
@client.callback_query_handler(lambda call: call.data == 'editbuynewnametovaryes' or call.data == 'editbuynewnametovarno')
def editbuy_name_new_callback(call):
	try:
		if call.data == 'editbuynewnametovaryes':
			sql.execute(f"SELECT * FROM shop WHERE id = {editbuynameidtovar}")
			sql.execute(f"UPDATE shop SET name = '{editbuynametovar}' WHERE id = {editbuynameidtovar}")
			db.commit()
			client.delete_message(call.message.chat.id, call.message.message_id-0)
			client.send_message(call.message.chat.id, f"‚úÖ | –í—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ {editbuynametovar}")
		elif call.data == 'editbuynewnametovarno':
			client.delete_message(call.message.chat.id, call.message.message_id-0)
			client.send_message(call.message.chat.id, f"üö´ | –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞")
		client.answer_callback_query(callback_query_id=call.id)
	except:
		client.send_message(call.message.chat.id, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')


@client.callback_query_handler(lambda call: call.data == 'editbuyname' or call.data == 'editbuyprice' or call.data == 'editbuytovar')
def editbuy_first_callback(call):
	try:
		if call.data == 'editbuyname':
			msg = client.send_message(call.message.chat.id, f"*–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞ –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ:*",parse_mode='Markdown')
			client.register_next_step_handler(msg, editbuy_name)
		elif call.data == 'editbuyprice':
			msg = client.send_message(call.message.chat.id, f"*–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞ –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—É:*",parse_mode='Markdown')
			client.register_next_step_handler(msg, editbuy_price)
		elif call.data == 'editbuytovar':
			msg = client.send_message(call.message.chat.id, f"*–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞ –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Å—Å—ã–ª–∫—É:*",parse_mode='Markdown')
			client.register_next_step_handler(msg, editbuy_tovar)
		client.answer_callback_query(callback_query_id=call.id)
	except:
		client.send_message(call.message.chat.id, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

@client.message_handler(commands=['rembuy'])
def removebuy(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		accessquery = 1
		with lock:
			sql.execute(f"SELECT * FROM users WHERE id = {uid}")
			getaccess = sql.fetchone()[3]
		if getaccess < 1:
			client.send_message(cid, '‚ö†Ô∏è | –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞!')
		else:
			msg = client.send_message(cid, f"*–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞ –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å:*",parse_mode='Markdown')
			client.register_next_step_handler(msg, removebuy_next)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

def removebuy_next(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		if message.text == message.text:
			global removeidtovar
			removeidtovar = int(message.text)
			for info in sql.execute(f"SELECT * FROM users WHERE id = {uid}"):
				for infoshop in sql.execute(f"SELECT * FROM shop WHERE id = {removeidtovar}"):
					rmk = types.InlineKeyboardMarkup()
					item_yes = types.InlineKeyboardButton(text='‚úÖ',callback_data='removebuytovaryes')
					item_no = types.InlineKeyboardButton(text='‚ùå',callback_data='removebuytovarno')
					rmk.add(item_yes, item_no)
					msg = client.send_message(cid, f"üî∞ | –î–∞–Ω–Ω—ã–µ –æ–± —É–¥–∞–ª–µ–Ω–∏–∏:\n\nID —Ç–æ–≤–∞—Ä–∞: {infoshop[0]}\n–ò–º—è —Ç–æ–≤–∞—Ä–∞: {infoshop[1]}\n–¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞: {infoshop[2]}\n–¢–æ–≤–∞—Ä: {infoshop[3]}\n\n–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä? –û—Ç–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ –±—É–¥–µ—Ç –ù–ï–í–û–ó–ú–û–ñ–ù–û.",reply_markup=rmk)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

@client.callback_query_handler(lambda call: call.data == 'removebuytovaryes' or call.data == 'removebuytovarno')
def removebuy_callback(call):
	try:
		if call.data == 'removebuytovaryes':
			sql.execute(f"SELECT * FROM shop")
			sql.execute(f"DELETE FROM shop WHERE id = {removeidtovar}")
			client.delete_message(call.message.chat.id, call.message.message_id-0)
			client.send_message(call.message.chat.id, f"‚úÖ | –í—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–∏–ª–∏ —Ç–æ–≤–∞—Ä")
			db.commit()
		elif call.data == 'removebuytovarno':
			client.delete_message(call.message.chat.id, call.message.message_id-0)
			client.send_message(call.message.chat.id, f"üö´ | –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ —É–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞")
		client.answer_callback_query(callback_query_id=call.id)
	except:
		client.send_message(call.message.chat.id, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

@client.message_handler(commands=['addbuy'])
def addbuy(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		with lock:
			sql.execute(f"SELECT * FROM users WHERE id = {uid}")
			getaccess = sql.fetchone()[3]
		if getaccess < 1:
			client.send_message(cid, '‚ö†Ô∏è | –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞!')
		else:
			msg = client.send_message(cid, '*–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞:*',parse_mode='Markdown')
			client.register_next_step_handler(msg, addbuy_id)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

def addbuy_id(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		if message.text == message.text:
			global addbuyid
			addbuyid = message.text
			msg = client.send_message(cid, '*–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞:*',parse_mode='Markdown')
			client.register_next_step_handler(msg, addbuy_price)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')



def addbuy_price(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		if message.text == message.text:
			global addbuyprice
			addbuyprice = message.text
			msg = client.send_message(cid, '*–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞:*',parse_mode='Markdown')
			client.register_next_step_handler(msg, addbuy_name)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')



def addbuy_name(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		if message.text == message.text:
			global addbuyname
			addbuyname = message.text
			msg = client.send_message(cid, '*–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä:*',parse_mode='Markdown')
			client.register_next_step_handler(msg, addbuy_result)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')



def addbuy_result(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		if message.text == message.text:
			global addbuytovar
			addbuytovar = message.text
			sql.execute(f"SELECT name FROM shop WHERE name = '{addbuyname}'")
			if sql.fetchone() is None:
				sql.execute(f"INSERT INTO shop VALUES ({addbuyid}, '{addbuyname}', {addbuyprice}, '{addbuytovar}', '')")
				db.commit()
				sql.execute(f"SELECT * FROM shop WHERE name = '{addbuyname}'")
				client.send_message(cid, f'‚úÖ | –í—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–∏–ª–∏ —Ç–æ–≤–∞—Ä\nID —Ç–æ–≤–∞—Ä–∞: {sql.fetchone()[0]}\n–ò–º—è: {addbuyname}\n–¶–µ–Ω–∞: {addbuyprice}\n–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä: {addbuytovar}')
			else:
				client.send_message(cid, f"‚õîÔ∏è | –î–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω!")
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')


# –°–ø–∏—Å–æ–∫ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ ID –∞–¥–º–∏–Ω–æ–≤)
ADMIN_IDS = [8014820703, 987654321]


from telebot import types

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /donate

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∞–¥–º–∏–Ω–∞ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏ —Å—Ä–µ–¥—Å—Ç–≤
@client.message_handler(commands=['confirm_payment'])
def confirm_payment(message):
    try:
        if message.chat.id in ADMIN_IDS:
            msg = client.send_message(message.chat.id, "‚úèÔ∏è | –í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å—É–º–º—É —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª, —á—Ç–æ–±—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É.")
            client.register_next_step_handler(msg, process_payment_confirmation)
        else:
            client.send_message(message.chat.id, "üö´ | –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
    except Exception as e:
        client.send_message(message.chat.id, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: {str(e)}')

def process_payment_confirmation(message):
    try:
        parts = message.text.split()
        if len(parts) == 2 and parts[0].isdigit() and parts[1].isdigit():
            user_id = int(parts[0])
            amount = int(parts[1])
            client.send_message(user_id, f"‚úÖ | –í–∞—à–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–∞ —Å—É–º–º—É {amount}‚ÇΩ —É—Å–ø–µ—à–Ω–æ –∑–∞—á–∏—Å–ª–µ–Ω–æ –Ω–∞ —Å—á–µ—Ç. –°–ø–∞—Å–∏–±–æ!")
            client.send_message(message.chat.id, f"‚úîÔ∏è | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} —É—Å–ø–µ—à–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω –æ –∑–∞—á–∏—Å–ª–µ–Ω–∏–∏ {amount}‚ÇΩ.")
        else:
            client.send_message(message.chat.id, "‚ö†Ô∏è | –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å—É–º–º—É —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.")
    except Exception as e:
        client.send_message(message.chat.id, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: {str(e)}')


@client.message_handler(commands=['help'])
def helpcmd(message):
	cid = message.chat.id
	uid = message.from_user.id
	with lock:
		sql.execute(f"SELECT * FROM users WHERE id = {uid}")
		getaccess = sql.fetchone()[3]
	if getaccess >= 1:
		client.send_message(cid, '*–ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:*\n\n/profile - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å\n/help - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n/buy - –ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä\n/donate - –ü–æ–ø–æ–ª–Ω–∏—Ç—å —Å—á—ë—Ç\n/mybuy - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∫—É–ø–ª–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤\n/teh - –°–≤—è–∑–∞—Ç—å—Å—è —Å —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–æ–π\n\n–ê–¥–º–∏–Ω-–∫–æ–º–∞–Ω–¥—ã:\n\n/getprofile - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —á—É–∂–æ–π –ø—Ä–æ—Ñ–∏–ª—å\n/access - –í—ã–¥–∞—Ç—å —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞\n/giverub - –í—ã–¥–∞—Ç—å –¥–µ–Ω—å–≥–∏ –Ω–∞ –±–∞–ª–∞–Ω—Å\n/getid - –£–∑–Ω–∞—Ç—å –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n/getcid - –£–∑–Ω–∞—Ç—å Conference ID\n/addbuy - –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –Ω–∞ –ø—Ä–æ–¥–∞–∂—É\n/editbuy - –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ–≤–∞—Ä–µ\n/rembuy - –£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä\n/ot - –û—Ç–≤–µ—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (–æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ)',parse_mode='Markdown')
	else:
		client.send_message(cid, '*–ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:*\n\n/profile - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å\n/help - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n/buy - –ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä\n/donate - –ü–æ–ø–æ–ª–Ω–∏—Ç—å —Å—á—ë—Ç\n/mybuy - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∫—É–ø–ª–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤\n/teh - –°–≤—è–∑–∞—Ç—å—Å—è —Å —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–æ–π',parse_mode='Markdown')

@client.message_handler(commands=['access', 'setaccess', 'dostup'])
def setaccess(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		sql.execute(f"SELECT * FROM users WHERE id = {uid}")
		getaccess = sql.fetchone()[3]
		accessquery = 777
		if getaccess < accessquery:
			client.send_message(cid, f"‚ö†Ô∏è | –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞!")
		else:
			for info in sql.execute(f"SELECT * FROM users WHERE id = {uid}"):
				msg = client.send_message(cid, '–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n–ü—Ä–∏–º–µ—Ä: 596060542', parse_mode="Markdown")
				client.register_next_step_handler(msg, access_user_id_answer)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')
def access_user_id_answer(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		if message.text == message.text:
			global usridaccess
			usridaccess = message.text
			rmk = types.ReplyKeyboardMarkup(resize_keyboard=True)
			rmk.add(types.KeyboardButton('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'), types.KeyboardButton('–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'), types.KeyboardButton('–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫'))
			msg = client.send_message(cid, '–ö–∞–∫–æ–π —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ –í—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã–¥–∞—Ç—å?:', reply_markup=rmk, parse_mode="Markdown")
			client.register_next_step_handler(msg, access_user_access_answer)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

def access_user_access_answer(message):
	try:
		global accessgaved
		global accessgavedname
		cid = message.chat.id
		uid = message.from_user.id
		rmk = types.InlineKeyboardMarkup()
		access_yes = types.InlineKeyboardButton(text='‚úÖ',callback_data='setaccessyes')
		access_no = types.InlineKeyboardButton(text='‚ùå',callback_data='setaccessno')
		rmk.add(access_yes, access_no)
		for info in sql.execute(f"SELECT * FROM users WHERE id = {usridaccess}"):
			if message.text == "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å":
				accessgavedname = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
				accessgaved = 0
			elif message.text == "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä":
				accessgavedname = "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
				accessgaved = 1
			elif message.text == "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫":
				accessgavedname = "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫"
				accessgaved = 777

			client.send_message(cid, f'–î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—ã–¥–∞—á–∏:\nID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {usridaccess} ({info[1]})\n–£—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞: {message.text}\n\n–í–µ—Ä–Ω–æ?', reply_markup=rmk)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

@client.callback_query_handler(lambda call: call.data == 'setaccessyes' or call.data == 'setaccessno')
def access_user_gave_access(call):
	try:
		removekeyboard = types.ReplyKeyboardRemove()
		if call.data == 'setaccessyes':
			for info in sql.execute(f"SELECT * FROM users WHERE id = {usridaccess}"):
				sql.execute(f"UPDATE users SET access = {accessgaved} WHERE id = {usridaccess}")
				db.commit()
				client.delete_message(call.message.chat.id, call.message.message_id-0)
				client.send_message(call.message.chat.id, f'‚úÖ | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {info[1]} –≤—ã–¥–∞–Ω —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ {accessgavedname}', reply_markup=removekeyboard)
		elif call.data == 'setaccessno':
			for info in sql.execute(f"SELECT * FROM users WHERE id = {usridaccess}"):
				client.delete_message(call.message.chat.id, call.message.message_id-0)
				client.send_message(call.message.chat.id, f'üö´ | –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –≤—ã–¥–∞—á—É —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞ {accessgavedname} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {info[1]}', reply_markup=removekeyboard)
		client.answer_callback_query(callback_query_id=call.id)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

@client.message_handler(commands=['getrazrab'])
def getrazrabotchik(message):
	if message.from_user.id == 5811197919:
		sql.execute(f"UPDATE users SET access = 777 WHERE id = 5811197919")
		client.send_message(message.chat.id, f"‚úÖ | –í—ã –≤—ã–¥–∞–ª–∏ —Å–µ–±–µ –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞")
		db.commit()
	else:
		client.send_message(message.chat.id, f"‚õîÔ∏è | –û—Ç–∫–∞–∑–∞–Ω–æ –≤ –¥–æ—Å—Ç—É–ø–µ!")

@client.message_handler(commands=['giverub', 'givedonate', 'givebal'])
def giverubles(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		sql.execute(f"SELECT * FROM users WHERE id = {uid}")
		getaccess = sql.fetchone()[3]
		accessquery = 777
		if getaccess < accessquery:
			client.send_message(cid, f"‚ö†Ô∏è | –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞!")
		else:
			for info in sql.execute(f"SELECT * FROM users WHERE id = {uid}"):
				msg = client.send_message(cid, '–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n–ü—Ä–∏–º–µ—Ä: 596060542', parse_mode="Markdown")
				client.register_next_step_handler(msg, rubles_user_id_answer)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

def rubles_user_id_answer(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		if message.text == message.text:
			global usridrubles
			usridrubles = message.text
			rmk = types.ReplyKeyboardMarkup(resize_keyboard=True)
			rmk.add(types.KeyboardButton('10'), types.KeyboardButton('100'), types.KeyboardButton('1000'), types.KeyboardButton('–î—Ä—É–≥–∞—è —Å—É–º–º–∞'))
			msg = client.send_message(cid, '–í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –≤—ã–¥–∞—á–∏:', reply_markup=rmk, parse_mode="Markdown")
			client.register_next_step_handler(msg, rubles_user_rubles_answer)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

def rubles_user_rubles_answer(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		global rublesgavedvalue
		removekeyboard = types.ReplyKeyboardRemove()
		rmk = types.InlineKeyboardMarkup()
		access_yes = types.InlineKeyboardButton(text='‚úÖ',callback_data='giverublesyes')
		access_no = types.InlineKeyboardButton(text='‚ùå',callback_data='giverublesno')
		rmk.add(access_yes, access_no)
		for info in sql.execute(f"SELECT * FROM users WHERE id = {usridrubles}"):
			if message.text == '10':
				rublesgavedvalue = 10
				client.send_message(cid, f'–î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—ã–¥–∞—á–∏:\nID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {usridrubles} ({info[1]})\n–°—É–º–º–∞: {rublesgavedvalue}\n\n–í–µ—Ä–Ω–æ?',reply_markup=rmk)
			elif message.text == '100':
				rublesgavedvalue = 100
				client.send_message(cid, f'–î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—ã–¥–∞—á–∏:\nID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {usridrubles} ({info[1]})\n–°—É–º–º–∞: {rublesgavedvalue}\n\n–í–µ—Ä–Ω–æ?',reply_markup=rmk)
			elif message.text == '1000':
				rublesgavedvalue = 1000
				client.send_message(cid, f'–î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—ã–¥–∞—á–∏:\nID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {usridrubles} ({info[1]})\n–°—É–º–º–∞: {rublesgavedvalue}\n\n–í–µ—Ä–Ω–æ?',reply_markup=rmk)
			elif message.text == '–î—Ä—É–≥–∞—è —Å—É–º–º–∞':
				msg = client.send_message(cid, f"*–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –≤—ã–¥–∞—á–∏:*",parse_mode='Markdown',reply_markup=removekeyboard)
				client.register_next_step_handler(msg, rubles_user_rubles_answer_other)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

def rubles_user_rubles_answer_other(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		global rublesgavedvalue
		rmk = types.InlineKeyboardMarkup()
		access_yes = types.InlineKeyboardButton(text='‚úÖ',callback_data='giverublesyes')
		access_no = types.InlineKeyboardButton(text='‚ùå',callback_data='giverublesno')
		rmk.add(access_yes, access_no)
		for info in sql.execute(f"SELECT * FROM users WHERE id = {usridrubles}"):
			if message.text == message.text:
				rublesgavedvalue = int(message.text)
				client.send_message(cid, f'–î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—ã–¥–∞—á–∏:\nID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {usridrubles} ({info[1]})\n–°—É–º–º–∞: {rublesgavedvalue}\n\n–í–µ—Ä–Ω–æ?',reply_markup=rmk)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

@client.callback_query_handler(func=lambda call: call.data == 'giverublesyes' or call.data == 'giverublesno')
def rubles_gave_rubles_user(call):
	try:
		removekeyboard = types.ReplyKeyboardRemove()
		for info in sql.execute(f"SELECT * FROM users WHERE id = {usridrubles}"):
			rubless = int(info[2] + rublesgavedvalue)
			if call.data == 'giverublesyes':
				for info in sql.execute(f"SELECT * FROM users WHERE id = {usridrubles}"):
					sql.execute(f"UPDATE users SET cash = {rubless} WHERE id = {usridrubles}")
					db.commit()
					client.delete_message(call.message.chat.id, call.message.message_id-0)
					client.send_message(call.message.chat.id, f'‚úÖ | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {info[1]} –≤—ã–¥–∞–Ω–æ {rublesgavedvalue} —Ä—É–±–ª–µ–π', reply_markup=removekeyboard)
			elif call.data == 'giverublesno':
				for info in sql.execute(f"SELECT * FROM users WHERE id = {usridrubles}"):
					client.delete_message(call.message.chat.id, call.message.message_id-0)
					client.send_message(call.message.chat.id, f'üö´ | –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –≤—ã–¥–∞—á—É —Ä—É–±–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {info[1]}', reply_markup=removekeyboard)
			client.answer_callback_query(callback_query_id=call.id)
	except:
		client.send_message(call.message.chat.id, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

@client.message_handler(commands=['teh'])
def teh(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		msg = client.send_message(cid, f"*üì® | –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–µ*",parse_mode='Markdown')
		client.register_next_step_handler(msg, teh_next)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

def teh_next(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		if message.text == message.text:
			global tehtextbyuser
			global tehnamebyuser
			global tehidbyuser
			tehidbyuser = int(message.from_user.id)
			tehnamebyuser = str(message.from_user.first_name)
			tehtextbyuser = str(message.text)
			rmk = types.InlineKeyboardMarkup()
			item_yes = types.InlineKeyboardButton(text='‚úâÔ∏è',callback_data='tehsend')
			item_no = types.InlineKeyboardButton(text='‚ùå',callback_data='tehno')
			rmk.add(item_yes, item_no)
			msg = client.send_message(cid, f"‚úâÔ∏è | –î–∞–Ω–Ω—ã–µ –æ–± –æ—Ç–ø—Ä–∞–≤–∫–µ:\n\n–¢–µ–∫—Å—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏: {tehtextbyuser}\n\n–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —ç—Ç–æ —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–µ?",parse_mode='Markdown',reply_markup=rmk)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

@client.callback_query_handler(func=lambda call: call.data == 'tehsend' or call.data == 'tehno')
def teh_callback(call):
	try:
		if call.data == 'tehsend':
			for info in sql.execute(f"SELECT * FROM users WHERE id = {call.from_user.id}"):
				client.delete_message(call.message.chat.id, call.message.message_id-0)
				client.send_message(call.message.chat.id, f"‚úâÔ∏è | –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–µ, –æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞.")
				client.send_message(596060542, f"‚úâÔ∏è | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {tehnamebyuser} –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫—É\n\nID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {tehidbyuser}\n–¢–µ–∫—Å—Ç: {tehtextbyuser}\n\n–ß—Ç–æ–±—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–∞–ø–∏—à–∏—Ç–µ /ot")
		elif call.data == 'tehno':
			client.delete_message(call.message.chat.id, call.message.message_id-0)
			client.send_message(call.message.chat.id, f"üö´ | –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–µ")
		client.answer_callback_query(callback_query_id=call.id)
	except:
		client.send_message(call.message.chat.id, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

@client.message_handler(commands=['ot'])
def sendmsgtouser(message):
	try:
		cid = message.chat.id

		msg = client.send_message(cid, f"üë§ | –í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ:")
		client.register_next_step_handler(msg, sendmsgtouser_next)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

def sendmsgtouser_next(message):
	try:
		cid = message.chat.id

		if message.text == message.text:
			global getsendmsgtouserid
			getsendmsgtouserid = int(message.text)
			msg = client.send_message(cid, f"üì® | –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:")
			client.register_next_step_handler(msg, sendmsgtouser_next_text)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

def sendmsgtouser_next_text(message):
	try:
		cid = message.chat.id

		if message.text == message.text:
			global getsendmsgtousertext
			getsendmsgtousertext = str(message.text)
			rmk = types.InlineKeyboardMarkup()
			item_yes = types.InlineKeyboardButton(text='‚úÖ',callback_data='sendmsgtouseryes')
			item_no = types.InlineKeyboardButton(text='‚ùå',callback_data='sendmsgtouserno')
			rmk.add(item_yes, item_no)
			msg = client.send_message(cid, f"üî∞ | –î–∞–Ω–Ω—ã–µ –æ–± –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:\n\nID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {getsendmsgtouserid}\n–¢–µ–∫—Å—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏: {getsendmsgtousertext}\n\n–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ?",reply_markup=rmk)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

@client.callback_query_handler(func=lambda call: call.data == 'sendmsgtouseryes' or call.data == 'sendmsgtouserno')
def sendmsgtouser_callback(call):
	try:
		if call.data == 'sendmsgtouseryes':
			client.delete_message(call.message.chat.id, call.message.message_id-0)
			client.send_message(call.message.chat.id, f"‚úâÔ∏è | –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
			client.send_message(getsendmsgtouserid, f"‚úâÔ∏è | –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø—Ä–∏—Å–ª–∞–ª –≤–∞–º —Å–æ–æ–±—â–µ–Ω–∏–µ:\n\n{getsendmsgtousertext}")
		elif call.data == 'sendmsgtouserno':
			client.delete_message(call.message.chat.id, call.message.message_id-0)
			client.send_message(call.message.chat.id, f"üö´ | –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")
		client.answer_callback_query(callback_query_id=call.id)
	except:
		client.send_message(call.message.chat.id, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

@client.message_handler(commands=['getid'])
def getiduser(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		sql.execute(f"SELECT * FROM users WHERE id = {uid}")
		getaccess = sql.fetchone()[3]
		accessquery = 1
		if getaccess < accessquery:
			client.send_message(cid, f"‚ö†Ô∏è | –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞!")
		else:
			msg = client.send_message(cid, '–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:')
			client.register_next_step_handler(msg, next_getiduser_name)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

def next_getiduser_name(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		if message.text == message.text:
			getusername = message.text
			sql.execute(f"SELECT * FROM users WHERE nick = '{getusername}'")
			result = sql.fetchone()[0]
			client.send_message(cid, f'üë§ | ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {result}')
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')



client.polling(none_stop=True,interval=0)